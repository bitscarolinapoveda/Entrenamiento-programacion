                 Bits America ejercicios de php


   1-  Debes trabajar en la siguientes tareas para empezar:
        Instalar visual studio code.
        Instalar los plugins necesarios para codificación de PHP.
        Instalar mysqlworbench para las bases de datos.
        Instalar wamp

--------------------

    2- Debemos de aprender git y github por favor revisa este link que es de un curso
          https://codigofacilito.com/cursos/git  
         En github por favor crea una cuenta con el correo de bitsamericas y tu user debe ser bitssebastiansanchez

---------------

     3-vamos a empezar con ejercicios de linux, entonces debes en windows ejecutar comandos linux
        Las tareas que debes ejecutar son:
      Crear un repisitorio en github que se llame entrenamiento programacion
      debes crear una carpeta llamada linux
       Utilizando comandos de linux, realiza las siguientes acciones:
       Usando wget, descarga el archivo tar.gz de ejemplo desde la URL https://www.dynaexamples.com/examples-manual/ls-dyna_example.tg
       El archivo se descargará como "ls-dyna_example.tgz". Renombra el archivo a "ejemplos.tgz"
       Descomprime el contenido del archivo en una nueva carpeta llamada ejemplos (be/php/linux/ejemplos).
       Utilizando el comando find, localiza todos los archivos dentro de ejemplos que tienen más de 100k (12 archivos).
       Amplía el comando anterior para eliminar todos los archivos encontrados con el find (más de 100k).
       Elimina con un único comando todos los archivos que empiezan por 'constrained'.
       Desde la carpeta linux, comprime la carpeta ejemplos con nombre ejemplos_filtrado.tar.gz.
       Los ejercicios anteriores debe quedar los comandos utilizados en un archivo llamado linux_1.txt
       Eso lo subes al repositorio

----------------------------

    4-  Utilizando comandos de linux, realiza las siguientes acciones: 

        - Obtén el tamaño, en megas, ocupado por la carpeta linux.
        - Obtén las 15 primeras líneas del archivo contact.plates.k y guárdalas en un nuevo archivo llamado newfile.txt
        - Edita el archivo con uno de los editores propuestos (vim o nano):
        - Elimina la línea completa Last Modified
        - Inserta, antes de Units: mm,s, una línea con el siguiente contenido: 
           $   Espacio ocupado: x M (sustituye la x por el valor obtenido en el primer punto). 
       - Guarda el archivo con los cambios realizados. 
      - Mueve el archivo a la carpeta linux.
         sigue con esos ejercicios y lo mismo para guardar los comnados que utilizaste guardalos en un archivo llamada linux_2.txt

-------------------------------


      5- Crea el script  php/php_1.php con las siguientes características: 
           - Define dos variables numéricas $num1 y $num2 con los valores 41 y 2.1, respectivamente. Realiza con estas variables las operaciones: suma, resta, multiplicación, división y resto de la división. 
           - Muestra, en modo texto, para cada operación, el resultado obtenido. Por ejemplo: 
              El resultado de sumar 41 y 2.1 es 43.1.
              El resultado de restar 41 y 2.1 es 38.9... 
             - Incluye las etiquetas HTML mínimas para que la página se muestre correctamente (<html>, <head>, <body>, <meta charset...>, etc.). Añade un salto de línea HTML (<br>) después de cada operación.


----------------------------------


     6-Crea el script php_2.php con las siguientes características: 
         -Vamos a crear un array donde cada elemento almacena la información de una película. Cade elemento será un array asociativo con las siguientes claves: 
           identificador
          titulo
         direct0r
         año
         duracion
         - Carga el array con al menos 4 películas. 
       - Sin utilizar estructuras de control o repetición, construye una tabla HTML con los datos del array.


------------------------------

     7-Crea el script php_3.php con las siguientes características: 
          - Utilizando el código de la actividad php_2.php, representa la misma tabla pero haciendo uso de un bucle for. No modifiques el archivo  php_2.php, copia su contenido en el archivo php_3.php para luego modificarlo. 
          - Una vez finalizado, añade un elemento más al array (una película), y comprueba que también se muestra en la tabla, sin realizar ninguna modificación adicional al código.


-----------------------------

8-  Crea el script php_4.php con las siguientes características: 
          - Crea un bucle while que muestre por pantalla todos los números impares menores de 1000. Los números se mostrarán separados por comas: 1,3,5,7,... 999. Utiliza el operador % para averiguar si un número es par o impar. 
          - Añade una variable numérica antes del while ($terminar = 356).
          - Añade al while una condición para que el bucle termine (break) cuando llegue al valor de $terminar. 
            Comprueba el funcionamiento del bucle con ese valor inicial. Luego cambia el valor a $terminar = 35 y vuelve a comprobar, sin modificar el código, que funcione correctamente. 
         - En todos los casos, el último valor mostrado no debe terminar en coma: 
             Incorrecto: 1,3,5,7,
            Correcto: 1,3,5,7
-----------------------------------



       9-Crea el script php_5.php con las siguientes características: 
             Define 2 variables $cadena1 = "abcdefg" y $cadena2 = "abc". Estos son los valores iniciales, pero puedes/debes cambiarlos para poder probar todos los casos posibles. 
          - Utilizando cláusulas if/else/ifelse, compara el número de caracteres de cada cadena, indicando, según el resultado: 
             La cadena1 es mayor que la cadena2 en x caracteres. 
             La cadena1 es menor que la cadena2 en x caracteres.
            Las cadenas son iguales y tienen x caracteres. 
         - Para calcular el número de caracteres de una cadena utiliza la función strlen():

             http://php.net/manual/es/function.strlen.php  

-------------------------------------


           10-Crea el script php_5.php con las siguientes características: 
                  - Define 2 variables $cadena1 = "abcdefg" y $cadena2 = "abc". Estos son los valores iniciales, pero puedes/debes cambiarlos para poder probar todos los casos posibles. 
                 - Utilizando cláusulas if/else/ifelse, compara el número de caracteres de cada cadena, indicando, según el resultado: 
                     La cadena1 es mayor que la cadena2 en x caracteres. 
                     La cadena1 es menor que la cadena2 en x caracteres.
                       Las cadenas son iguales y tienen x caracteres. 
                  - Para calcular el número de caracteres de una cadena utiliza la función strlen():
                     http://php.net/manual/es/function.strlen.php

--------------------------------------------------------------------
         11)    Crea el script php_6.php con las siguientes características: 
            - Añade el siguiente array:
             $employees = [
            13 => [
           'firstname' => 'Carolina',
           'lastname'  => 'Poveda',
	'salary'     => 900
       ],
            3 => [
        'firstname' => 'Sebastian',
         'lastname'  => 'Sanchez',
	'salary'     => 2700
              ],
         42 => [
         'firstname' => 'Saul',
         'lastname'  => 'Goodman',
       'salary'     => 1800
         ]
        ];
        - Utiliza una estructura foreach para mostrar un listado HTML (<ul><li>) con los datos de cada empleado: 
           Carolina Poveda (ID: 13) tiene un salario de $900.
           Sebastián Sanchez (ID: 3) tiene un salario de $2700.
         - Añade un switch para que, en cada iteración, compruebe si el salario del empleado está en los siguientes rangos:
          menos de 1000 pesos. Añadir el texto: (bajo)
         más de 1000 y menos de 2000. Añadir el texto: (medio)
        Más de 2000. Añadir el texto: (alto)
        Carolina Poveda (ID: 13) tiene un salario de $900 (bajo).
        Sebastián Sanchez (ID: 3) tiene un salario de $2700 (alto)...
        Ten en cuenta que en los case del switch, además de números o valores fijos, también podemos incluir condiciones: 
        case $x < 3:
        case $x >5 || $y < 35;
     - Dentro del mismo foreach, calcula quién tiene el salario mayor, e imprímelo a continuación: 
        Sebastián Sanchez tiene el mayor salario de todos.
         Editado


-----------------------------------------------------------------------
    Crea el script php_7.php con las siguientes características: 

- Este script será exclusivamente de PHP, sin etiquetas HTML. Lo usaremos de librería de funciones para la siguiente actividad. 

- Crea la función calculadora() con los siguientes parámetros de entrada: $num1, $num2, $operacion (valor por defecto: suma)

- $operacion permitirá los valores: suma, resta, disivison, multiplicacion, resto. Según el valor introducido (switch), realizará la operación correspondiente. 

- La función devolverá el resultado numérico de la operación. 

- Añade una condición para evitar el error de división por cero (cuando $num2 = 0 y $operacion = "division"). En este caso la función devolverá el valor "ERROR0"
------------------------------------------



Crea el script php_8.php con las siguientes características: 

- Incluye el script php_7.php creado en la actividad anterior. 

- Define un array $numeros con los siguientes pares de valores: 

'num1' => 41 y 'num2' => 2.1

'num1' => 3 y 'num2' => 67

'num1' => 145 y 'num2' => 0

- Define un array $operaciones con los nombres de las operaciones: suma, resta, disivison, multiplicacion, resto, y el símbolo correspondiente a cada operación ('suma' => '+', 'resta => '-', etc.). 

- Mediante estructuras de control anidadas, realiza todas las operaciones para todos los pares de valores del array. Imprime el resultado de cada operación de la siguiente forma: 

41 + 2.1 = 43.1
41 - 2.1 = 38.9
...
145 / 0 = Error de división por cero
- Añade un nuevo par de valores al array $numeros y comprueba que, sin modificar nada del código, el resultado de sus operaciones también se muestra.


----------------------------------------


Crea el script /php_f1.php con las siguientes características.

Dado el array de cadenas $strings, realiza las siguientes acciones:

$strings = [
  " Lorem ipsum dolor sit amet, consectetur EnTrenamiento elit, sed do eiusmod tempor incididunt ut",
  "Sed ut ENTRENAMIENTO unde omnis iste natus error sit voluptatem accusantium doloremque entrenamiento, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae ENTrenamiento dicta sunt explicabo. ",
  "Phasellus laoreet eu entrenamiento orci et tincidunt. Quisque ac drupal gravida sem, non eleifend erat EntreNAMiento."
];
- Nota 1: Ten en cuenta que la cadena tiene 3 elementos, pero el código debe aceptar un número dinámico de elementos.

- Nota 2: Realiza los cambios directamente sobre el array $strings.  

- Calcula e imprime el número de caracteres de cada cadena. Imprime también el total de caracteres. 

- Elimina posibles espacios al principio y final de cada cadena. 

- Calcula e imprime el número de espacios de cada cadena. Imprime también el total de espacios. 

- Sustituye todas las variantes de Entrenamiento (ENTRENAMIENTO, ENtrenamiento, EnTrEnAmiento, etc.) por Entrenamiento. 

- Calcula e imprime el número de veces que aparece la palabra Entrenamiento en cada cadena. Imprime también el total. 

- Reemplaza la palabra Entrenamiento por "<strong>Entrenamiento</strong>", de forma que se muestre en negrita. 

- Recorta todas las cadenas a 100 caracteres (quédate con los primeros 100 caracteres). 

- Por último, imprime las cadenas resultantes, separadas por un salto de línea HTML (<br>).


--------------------------------------


     revisar tema de expresiones regulares


--------------------------------------

Crea el script php_f2.php con las siguientes características. 

Dado el array $numbers, realiza las siguientes operaciones: 

$numbers = [3, 45, 22, 12, 33, 23, 44, 1, 121];
- Imprime el número de elementos del array. 

- Cuenta e imprime el número de elementos pares y de elementos impares. 

- Ordena los elementos del array en orden ascendente. 

- Crea un array llamado $morenumbers, a partir de la cadena "5:76:7:8". Utiliza las funciones de arrays adecuadas para convertir la cadena en un array de números. 

- Combina los dos arrays, de forma que los números de $numbers queden en primer lugar. Almacena el resultado en el array $numbers. 

- Ordena los elemento del array en orden descendente. 

- Por último, imprime el array $numbers resultante utilizando print_r().


----------------------------------------------

Crea el script php_f3.php con las siguientes características.

Dado el array de países $countries, realiza las acciones que se indican: 

$countries = [
  'uk' => 'United Kingdom',
  'fr' => 'France',
  'pt' => 'Portugal',
  've' => 'Venezuela',
  'at' => 'Austria',
  'es' => 'Spain',
  'co' => 'Colombia'
];
- Nota 1: Ten en cuenta que el array tiene que ser tratado de forma dinámica. Si se añaden más países, debe funcionar correctamente.

- Nota 2: Realiza los cambios directamente sobre el array $countries.  

- Comprueba si tu país está en la lista. Si está, imprime la cadena "Mi país de origen es X y está en la lista". Si no está, imprime la cadena: "Mi país de origen es X pero no está en la lista". Sustituye X por el nombre de tu país. 

- Ordena el array en orden alfabético según el nombre del país (y sin perder la relación de claves)

- Imprime el array con print_r().

- Crea e imprime una cadena a partir del array, separando los nombres de países por ", " (coma y espacio). Utiliza las funciones estudiadas en la unidad.

---------------------------------------------------------------------

[1/2 8:31] Carolina Poveda
 
Crea el script php_f4.php con las siguientes características.

Dado el array de fechas $dates, realiza las siguientes acciones:

$dates = [
  ['day' => 3, 'month' => 12, 'year' => 2005],
  ['day' => 30, 'month' => 2, 'year' => 2017],
  ['day' => 7, 'month' => 9, 'year' => 2019],
  ['day' => 1, 'month' => 11, 'year' => 2014]
];
- Nota 1: Ten en cuenta que el array puede tener un número dinámico de elementos.

- Nota 2: Realiza los cambios directamente sobre el array $dates. 

- Recorre el array y comprueba si cada fecha es válida. Si encuentras una fecha no válida, elimínala del array (unset()). 

- Para cada elemento del array, añade un nuevo índice 'timestamp', y asígnale el valor de cada fecha en formato timestamp. Por ejemplo: 

  ['day' => 3, 'month' => 12, 'year' => 2005, 'timestamp' => 1133568000],
- Añade una nueva entrada al array con la fecha actual, tanto en elementos (day, month, year) como en formato timestamp. La fecha actual se tiene que obtener dinámicamente. 
- Imprime el array resultante con print_r().  
-------------------------------------------------------------------------


?
[1/2 8:34] Carolina Poveda
Con el archivo php_example.log que encontrarás adjunto a esta actividad, y súbelo a la carpeta php, junto al resto de scripts. 

Se trata de un archivo que almacena cadenas con estos valores: 

IP|timestamp|HTTP_USER_AGENT\n

El archivo ya tiene una cadena de ejemplo. 

Al mismo nivel, crea el script php_f5.php, realizando las siguientes acciones:  

- Comprueba que el fichero existe y su tamaño es mayor de 0. Realiza el resto de acciones solo si lo encuentra. Si no, devuelve un error indicando que no se ha podido encontrar el fichero o que el fichero está vacío. 

- Obten los valores actuales de IP, fecha en timestamp y valor de HTTP_USER_AGENT. 

La IP se puede obtener de $_SERVER['REMOTE_ADDR']

El HTTP_USER_AGENT o información del navegador del usuario se puede obtener de $_SERVER['HTTP_USER_AGENT']

- Añade al archivo una nueva línea (con salto de línea al final), con el formato indicado. Imprime una cadena indicando los valores que se han almacenado (sin acceder al contenido del fichero). 

- Accede al script desde el navegador. 

- Accede al script desde otro navegador.
---------------------------------------------------

Crea el script php_poo_1.php, definiendo la clase Vehicle con las siguientes características.

- Tendrá las siguientes propiedades públicas: $brand (marca), $seats (número de asientos), $fuel_capacity (capacidad de combustible), $license_plate(número de matrícula)

- Tendrá las siguientes propiedades protegidas: $fuel_level (nivel de combustible, 0 por defecto),  $current_speed (velocidad actual, 0 por defecto), $state(estado, 'off' por defecto).

- Declara, en el lugar correspondiente, el espacio de nombres php/Vehicles.

Continua trabajando en el script /php_poo_2.php, ampliando la clase Vehicle creada anteriormente.

- Crea métodos públicos getX() para obtener las propiedades $brand, $seats y $license_plate. Por ejemplo: getBrand().

- Crea métodos públicos setX() para asignar un valor a las propiedades $fuel_level, $current_speed y $state. Por ejemplo: setFuelLevel().

Continua trabajando en el script /php_poo_2.php, ampliando la clase Vehicle creada anteriormente.

- Crea métodos públicos getX() para obtener las propiedades $brand, $seats y $license_plate. Por ejemplo: getBrand().

- Crea métodos públicos setX() para asignar un valor a las propiedades $fuel_level, $current_speed y $state. Por ejemplo: setFuelLevel().

